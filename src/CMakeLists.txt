CMAKE_MINIMUM_REQUIRED(VERSION 2.8) 
PROJECT(idl)
SET(TARGET_NAME idl)

ADD_DEFINITIONS(-D_SCL_SECURE_NO_WARNINGS)

INCLUDE_DIRECTORIES(
	$ENV{BOOST_ROOT}
	$ENV{IDL_ROOT}/include
)

AUX_SOURCE_DIRECTORY(Timer SRC_LIST)
AUX_SOURCE_DIRECTORY(Datetime SRC_LIST)
AUX_SOURCE_DIRECTORY(iIntrusivePtr SRC_LIST)
AUX_SOURCE_DIRECTORY(Thread SRC_LIST)

ADD_LIBRARY(${TARGET_NAME} SHARED ${SRC_LIST})

IF (WIN32)
	IF (MSVC80) # Microsoft Visual C++ 8.0, Visual Studio 2005
		SET(VC_ID "vc80")
	ELSEIF (MSVC90) # Microsoft Visual C++ 9.0, Visual Studio 2008
		SET(VC_ID "vc90")
	ELSEIF (MSVC10) # Microsoft Visual C++ 10.0, Visual Studio 2010
		SET(VC_ID "vc100")
	ELSEIF (MSVC11) # Microsoft Visual C++ 11.0, Visual Studio 2012
		SET(VC_ID "vc110")
	ELSEIF (MSVC12) # Microsoft Visual C++ 12.0, Visual Studio 2013
		SET(VC_ID "vc120")
	ELSEIF (MSVC14) # Microsoft Visual C++ 14.0, Visual Studio 2015
		SET(VC_ID "vc140")
	ELSE ()
		MESSAGE(STATUS "Unsupported MSVC version! Please reference cmake variables.")
		SET(VC_ID "unknown")
	ENDIF ()
 
	SET(TARGET_BOOST_LIBS system chrono date_time regex thread)
	FOREACH( TARGET_BOOST_LIB ${TARGET_BOOST_LIBS} )
		TARGET_LINK_LIBRARIES(${TARGET_NAME} 
			debug $ENV{BOOST_ROOT}/stage/lib/libboost_${TARGET_BOOST_LIB}-${VC_ID}-mt-gd-x32-$ENV{BOOST_LIB_VERSION}.lib
			optimized $ENV{BOOST_ROOT}/stage/lib/libboost_${TARGET_BOOST_LIB}-${VC_ID}-mt-x32-$ENV{BOOST_LIB_VERSION}.lib
		)
	ENDFOREACH( TARGET_BOOST_LIB )
	
ELSE ()
ENDIF ()

IF (NOT CMAKE_BUILD_TYPE)
	SET(CMAKE_BUILD_TYPE "debug")
ENDIF (NOT CMAKE_BUILD_TYPE)
MESSAGE(STATUS "   ${TARGET_NAME}: ${CMAKE_BUILD_TYPE}" )

# configure output directory
# OUTPUTCONFIG: DEBUG, RELEASE, MINSIZEREL, RELWITHDEBINFO
SET(CMAKE_CONFIGURATION_TYPES DEBUG RELEASE MINSIZEREL RELWITHDEBINFO)
FOREACH( OUTPUTCONFIG ${CMAKE_CONFIGURATION_TYPES} )
	MESSAGE(STATUS "** Configuring ${OUTPUTCONFIG} ...")
	STRING( TOUPPER ${OUTPUTCONFIG} OUTPUTCONFIG )
	STRING( TOLOWER ${OUTPUTCONFIG} DIR_NAME )
	SET_TARGET_PROPERTIES( ${TARGET_NAME} PROPERTIES 
		RUNTIME_OUTPUT_DIRECTORY_${OUTPUTCONFIG} $ENV{IDL_ROOT}/${DIR_NAME}/bin )
	SET_TARGET_PROPERTIES( ${TARGET_NAME} PROPERTIES 
		LIBRARY_OUTPUT_DIRECTORY_${OUTPUTCONFIG} $ENV{IDL_ROOT}/${DIR_NAME}/lib )
	SET_TARGET_PROPERTIES( ${TARGET_NAME} PROPERTIES 
		ARCHIVE_OUTPUT_DIRECTORY_${OUTPUTCONFIG} $ENV{IDL_ROOT}/${DIR_NAME}/lib )
ENDFOREACH( OUTPUTCONFIG )

message(STATUS "" )
